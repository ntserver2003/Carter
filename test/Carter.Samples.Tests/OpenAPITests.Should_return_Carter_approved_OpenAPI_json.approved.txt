{
  "openapi": "3.0.1",
  "info": {
    "title": "Carter <3 OpenApi",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "paths": {
    "/castmembers": {
      "get": {
        "tags": [
          "CastMembers"
        ],
        "description": "Returns a list of actors",
        "operationId": "CastMembers_GetCastMembers",
        "responses": {
          "200": {
            "description": "A list of CastMembers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CastMember"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "description": "Returns a list of actors",
        "operationId": "Actors_GetActors",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "description": "How man items to offset from the start of the list",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "description": "How many items to return at one time. MAX:20",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Actors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Actor"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Actors"
        ],
        "description": "Create an actor in the system",
        "operationId": "Actors_AddActor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Actors"
          }
        }
      }
    },
    "/actors/{id}": {
      "get": {
        "tags": [
          "Actors"
        ],
        "description": "Gets an actor by it's id",
        "operationId": "Actors_GetActorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Actor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actor"
                }
              }
            }
          },
          "404": {
            "description": "Actor not found"
          }
        }
      },
      "put": {
        "tags": [
          "Actors"
        ],
        "description": "Update an existing actor",
        "operationId": "Actors_UpdateActor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actor"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Updated Actor"
          }
        }
      },
      "delete": {
        "tags": [
          "Actors"
        ],
        "description": "Delete an actor",
        "operationId": "Actors_DeleteActor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Actor"
          }
        }
      }
    },
    "/empty": {
      "get": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/actors/sample": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedItemsOfFoo"
                }
              }
            }
          }
        }
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Foo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/nullable": {
      "get": {
        "tags": [
          "SimpleNullable"
        ],
        "description": "Gets a SimpleNullable object",
        "operationId": "SimpleNullable",
        "responses": {
          "200": {
            "description": "A list of SimpleNullables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleNullable"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Actor": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "age": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer"
          }
        }
      },
      "Bar": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CastMember": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "Foo": {
        "type": "object",
        "properties": {
          "enumBars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bar"
            }
          },
          "listBars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bar"
            }
          }
        }
      },
      "PagedItemsOfFoo": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Foo"
            }
          }
        }
      },
      "SimpleNullable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nullableId": {
            "type": "integer",
            "nullable": true
          },
          "nullableBool": {
            "type": "boolean",
            "nullable": true
          },
          "nullableInt": {
            "type": "integer",
            "nullable": true
          },
          "nullableDouble": {
            "type": "number",
            "nullable": true
          },
          "nullableFloat": {
            "type": "number",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKey": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "BearerAuth": [ ]
    }
  ]
}